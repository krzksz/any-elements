!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.kompot={})}(this,function(t){var e=function(t){this.element=t,t.kompot=this};e.prototype.destructor=function(){},Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector);var o=[],n=null,r=function(t,e){t.setAttribute("data-kompot",e.name),t.kompot=new e.constructor(t)},c=function(t){t.nodeType===Node.ELEMENT_NODE&&o.forEach(function(e){t.matches(e.selector+":not([data-kompot])")&&r(t,e);for(var o=t.querySelectorAll(e.selector+":not([data-kompot])"),n=0;n<o.length;n++)r(o[n],e)})},i=function(t){t.removeAttribute("data-kompot"),t.kompot.destructor()},u=function(t){if(t.nodeType===Node.ELEMENT_NODE){t.hasAttribute("data-kompot")&&i(t);for(var e=t.querySelectorAll("[data-kompot]"),o=e.length,n=0;n<o;n++)i(e[n])}},a=function(t){t.forEach(function(t){for(var e=t.removedNodes,o=e.length,n=0;n<o;n++)u(e[n]);for(var r=t.addedNodes,i=r.length,a=0;a<i;a++)c(r[a])})},f=function(){n&&(n.disconnect(),n=null)};t.Component=e,t.register=function(t,e,n){o.push({selector:t,name:e,constructor:n})},t.unregister=function(t,e){o=o.filter(function(o){return o.selector!==t&&o.name!==e})},t.attach=function(t){void 0===t&&(t=document.body),f(),n=new MutationObserver(a).observe(t,{childList:!0,subtree:!0}),c(t)},t.detach=f});
//# sourceMappingURL=kompot.umd.js.map
