var t=function(t){this.element=t,t.kompot=this};t.prototype.destructor=function(){},Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector);var o=[],e=null,n=function(t,o){t.setAttribute("data-kompot",o.name),t.kompot=new o.constructor(t)},r=function(t){t.nodeType===Node.ELEMENT_NODE&&o.forEach(function(o){t.matches(o.selector+":not([data-kompot])")&&n(t,o);for(var e=t.querySelectorAll(o.selector+":not([data-kompot])"),r=0;r<e.length;r++)n(e[r],o)})},c=function(t,e,n){o.push({selector:t,name:e,constructor:n})},a=function(t,e){o=o.filter(function(o){return o.selector!==t&&o.name!==e})},u=function(t){t.removeAttribute("data-kompot"),t.kompot.destructor()},i=function(t){if(t.nodeType===Node.ELEMENT_NODE){t.hasAttribute("data-kompot")&&u(t);for(var o=t.querySelectorAll("[data-kompot]"),e=o.length,n=0;n<e;n++)u(o[n])}},l=function(t){t.forEach(function(t){for(var o=t.removedNodes,e=o.length,n=0;n<e;n++)i(o[n]);for(var c=t.addedNodes,a=c.length,u=0;u<a;u++)r(c[u])})},s=function(t){void 0===t&&(t=document.body),d(),e=new MutationObserver(l).observe(t,{childList:!0,subtree:!0}),r(t)},d=function(){e&&(e.disconnect(),e=null)};export{t as Component,c as register,a as unregister,s as attach,d as detach};
//# sourceMappingURL=kompot.mjs.map
